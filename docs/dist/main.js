/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/css-loader/dist/cjs.js!./src/style.css":
/*!*************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/style.css ***!
  \*************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/noSourceMaps.js */ \"./node_modules/css-loader/dist/runtime/noSourceMaps.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/getUrl.js */ \"./node_modules/css-loader/dist/runtime/getUrl.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);\n// Imports\n\n\n\nvar ___CSS_LOADER_URL_IMPORT_0___ = new URL(/* asset import */ __webpack_require__(/*! background.jpg */ \"./src/background.jpg\"), __webpack_require__.b);\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_noSourceMaps_js__WEBPACK_IMPORTED_MODULE_0___default()));\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(___CSS_LOADER_URL_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"* {\\n    font-family: 'Montserrat', sans-serif;\\n}\\nhtml {\\n    height: 100%;\\n}\\nbody {\\n    display: flex;\\n    flex-direction: column;\\n    height: 100%;\\n    margin-left: auto;\\n    margin-right: auto;\\n    background-image: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");\\n}\\n#headerContainer {\\n    display: flex;\\n    margin-right: auto;\\n    margin-left: auto;\\n    align-items: center;\\n    padding: 10px;\\n}\\n#scoreWrapper {\\n    text-decoration: none;\\n    outline: none;\\n    display: flex;\\n    align-items: center;\\n    justify-content: center;\\n    width: 33%;\\n    height: 45%;\\n    text-align: center;\\n    border-radius: 10px;\\n    font-family: 'Montserrat', sans-serif;\\n    font-size: 11px;\\n    text-transform: uppercase;\\n    letter-spacing: 3px;\\n    font-weight: 600;\\n    color: black;\\n    background: whitesmoke;\\n    box-shadow: 0 8px 15px rgb(0 0 0 / 10%);\\n    transition: 500ms;\\n}\\n#score {\\n    display: inline;\\n}\\n#newGameButton {\\n    padding: 0;\\n    text-decoration: none;\\n    outline: none;\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    width: 33%;\\n    height: 45%;\\n    border-radius: 10px;\\n    margin: 10px 20px;\\n    font-family: 'Montserrat', sans-serif;\\n    font-size: 11px;\\n    text-transform: uppercase;\\n    letter-spacing: 3px;\\n    font-weight: 600;\\n    color: black;\\n    background: whitesmoke;\\n    box-shadow: 0 8px 15px rgb(0 0 0 / 10%);\\n    transition: .3s;\\n    cursor: pointer;\\n}\\n#newGameButton:hover {\\n    background: #2EE59D;\\n    box-shadow: 0 15px 20px rgba(46, 229, 157, 0.4);\\n    color: #fff;\\n}\\n#gameName {\\n    font-family: 'Montserrat', sans-serif;\\n    display: flex;\\n    color: whitesmoke;\\n}\\n#bodyContainer {\\n    display: flex;\\n    justify-content: center;\\n    margin-right: auto;\\n    margin-left: auto;\\n    padding-bottom: 100px;\\n}\\n#mainTable {\\n    display: flex;\\n    justify-content: space-evenly;\\n    height: 100%;\\n    width: 100%;\\n    background-color: #beaf9f;\\n    border-radius: 10px;\\n}\\n\\ntd {\\n    position: relative;\\n    border-radius: 10px;\\n    background-color: #d0c1b4;\\n    padding: 0;\\n}\\n.basicElement {\\n    position: absolute;\\n    z-index: 1;\\n    display: flex;\\n    width: 100%;\\n    height: 100%;\\n    top: 0;\\n    bottom: 0;\\n    left: 0;\\n    right: 0;\\n    margin-right: auto;\\n    margin-left: auto;\\n    align-items: center;\\n    justify-content: center;\\n    border-radius: 10px;\\n    font-weight: bold;\\n    font-size: 35px;\\n    transition: 200ms;\\n    animation: show 300ms 1;\\n    animation-fill-mode: forwards;\\n}\\n@keyframes show{\\n    0% {\\n        opacity: 0;\\n        -webkit-transform: scale(0);\\n        -moz-transform: scale(0);\\n        transform: scale(0);\\n    }\\n    100% {\\n        opacity: 1;\\n        -webkit-transform: scale(1);\\n        -moz-transform: scale(1);\\n        transform: scale(1);\\n    }\\n}\\n@keyframes pulse{\\n    0% {\\n        box-shadow: 0 0 0 0 rgba(228, 25, 49, 0.4);\\n    }\\n    70% {\\n        box-shadow: 0 0 0 10px rgba(228, 25, 49, 0);\\n    }\\n    100% {\\n        box-shadow: 0 0 0 0 rgba(228, 25, 49, 0);\\n    }\\n}\\n\\n/* Large desktops and laptops */\\n/* Portrait tablets and medium desktops */\\n/* Portrait tablets and small desktops */\\n@media screen and (min-width: 768px) {\\n    #headerContainer {\\n        width: 620px;\\n    }\\n    #gameName {\\n        font-size: 5em;\\n    }\\n    #newGameButton {\\n        line-height: 45px;\\n    }\\n    #scoreWrapper {\\n        line-height: 45px;\\n    }\\n    #mainTable {\\n        border-spacing: 20px;\\n    }\\n    tr {\\n        height: 100px;\\n    }\\n    td {\\n        height: 100px;\\n        width: 100px;\\n    }\\n}\\n\\n/* Landscape phones and portrait tablets */\\n@media screen and (max-width: 767px) {\\n    #headerContainer {\\n        width: 410px;\\n    }\\n    #bodyContainer {\\n        padding-bottom: 30px;\\n    }\\n    #gameName {\\n        font-size: 4em;\\n    }\\n    #newGameButton {\\n        line-height: 30px;\\n    }\\n    #scoreWrapper {\\n        line-height: 30px;\\n    }\\n    #mainTable {\\n        border-spacing: 10px;\\n    }\\n    tr {\\n        height: 70px;\\n    }\\n    td {\\n        height: 70px;\\n        width: 70px;\\n    }\\n}\\n\\n/* Landscape phones and smaller */\\n@media screen and (max-width: 480px) {\\n    #bodyContainer {\\n        padding-bottom: 10px;\\n    }\\n    #headerContainer {\\n        width: 300px;\\n    }\\n    #gameName {\\n        font-size: 3em;\\n    }\\n    #newGameButton {\\n        line-height: 15px;\\n        font-size: 8px;\\n        letter-spacing: 2px;\\n    }\\n    #scoreWrapper {\\n        line-height: 15px;\\n        font-size: 8px;\\n        letter-spacing: 2px;\\n    }\\n    #mainTable {\\n        border-spacing: 10px;\\n    }\\n    .basicElement {\\n        font-size: 20px;\\n    }\\n    tr {\\n        height: 48px;\\n    }\\n    td {\\n        height: 48px;\\n        width: 48px;\\n    }\\n}\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://2048/./src/style.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\n//# sourceURL=webpack://2048/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/getUrl.js":
/*!********************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/getUrl.js ***!
  \********************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  }\n\n  url = String(url.__esModule ? url.default : url); // If url is already wrapped in quotes, remove them\n\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n\n  if (options.hash) {\n    url += options.hash;\n  } // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n\n\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n\n  return url;\n};\n\n//# sourceURL=webpack://2048/./node_modules/css-loader/dist/runtime/getUrl.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/noSourceMaps.js":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/noSourceMaps.js ***!
  \**************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = function (i) {\n  return i[1];\n};\n\n//# sourceURL=webpack://2048/./node_modules/css-loader/dist/runtime/noSourceMaps.js?");

/***/ }),

/***/ "./src/style.css":
/*!***********************!*\
  !*** ./src/style.css ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleDomAPI.js */ \"./node_modules/style-loader/dist/runtime/styleDomAPI.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertBySelector.js */ \"./node_modules/style-loader/dist/runtime/insertBySelector.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js */ \"./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/insertStyleElement.js */ \"./node_modules/style-loader/dist/runtime/insertStyleElement.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/styleTagTransform.js */ \"./node_modules/style-loader/dist/runtime/styleTagTransform.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./style.css */ \"./node_modules/css-loader/dist/cjs.js!./src/style.css\");\n\n      \n      \n      \n      \n      \n      \n      \n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = (_node_modules_style_loader_dist_runtime_styleTagTransform_js__WEBPACK_IMPORTED_MODULE_5___default());\noptions.setAttributes = (_node_modules_style_loader_dist_runtime_setAttributesWithoutAttributes_js__WEBPACK_IMPORTED_MODULE_3___default());\n\n      options.insert = _node_modules_style_loader_dist_runtime_insertBySelector_js__WEBPACK_IMPORTED_MODULE_2___default().bind(null, \"head\");\n    \noptions.domAPI = (_node_modules_style_loader_dist_runtime_styleDomAPI_js__WEBPACK_IMPORTED_MODULE_1___default());\noptions.insertStyleElement = (_node_modules_style_loader_dist_runtime_insertStyleElement_js__WEBPACK_IMPORTED_MODULE_4___default());\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"], options);\n\n\n\n\n       /* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"] && _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals ? _node_modules_css_loader_dist_cjs_js_style_css__WEBPACK_IMPORTED_MODULE_6__[\"default\"].locals : undefined);\n\n\n//# sourceURL=webpack://2048/./src/style.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module) => {

eval("\n\nvar stylesInDOM = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDOM.length; i++) {\n    if (stylesInDOM[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var indexByIdentifier = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3],\n      supports: item[4],\n      layer: item[5]\n    };\n\n    if (indexByIdentifier !== -1) {\n      stylesInDOM[indexByIdentifier].references++;\n      stylesInDOM[indexByIdentifier].updater(obj);\n    } else {\n      var updater = addElementStyle(obj, options);\n      options.byIndex = i;\n      stylesInDOM.splice(i, 0, {\n        identifier: identifier,\n        updater: updater,\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction addElementStyle(obj, options) {\n  var api = options.domAPI(options);\n  api.update(obj);\n\n  var updater = function updater(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap && newObj.supports === obj.supports && newObj.layer === obj.layer) {\n        return;\n      }\n\n      api.update(obj = newObj);\n    } else {\n      api.remove();\n    }\n  };\n\n  return updater;\n}\n\nmodule.exports = function (list, options) {\n  options = options || {};\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDOM[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDOM[_index].references === 0) {\n        stylesInDOM[_index].updater();\n\n        stylesInDOM.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://2048/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertBySelector.js":
/*!********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertBySelector.js ***!
  \********************************************************************/
/***/ ((module) => {

eval("\n\nvar memo = {};\n/* istanbul ignore next  */\n\nfunction getTarget(target) {\n  if (typeof memo[target] === \"undefined\") {\n    var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n    if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n      try {\n        // This will throw an exception if access to iframe is blocked\n        // due to cross-origin restrictions\n        styleTarget = styleTarget.contentDocument.head;\n      } catch (e) {\n        // istanbul ignore next\n        styleTarget = null;\n      }\n    }\n\n    memo[target] = styleTarget;\n  }\n\n  return memo[target];\n}\n/* istanbul ignore next  */\n\n\nfunction insertBySelector(insert, style) {\n  var target = getTarget(insert);\n\n  if (!target) {\n    throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n  }\n\n  target.appendChild(style);\n}\n\nmodule.exports = insertBySelector;\n\n//# sourceURL=webpack://2048/./node_modules/style-loader/dist/runtime/insertBySelector.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/insertStyleElement.js":
/*!**********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/insertStyleElement.js ***!
  \**********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction insertStyleElement(options) {\n  var element = document.createElement(\"style\");\n  options.setAttributes(element, options.attributes);\n  options.insert(element, options.options);\n  return element;\n}\n\nmodule.exports = insertStyleElement;\n\n//# sourceURL=webpack://2048/./node_modules/style-loader/dist/runtime/insertStyleElement.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/* istanbul ignore next  */\nfunction setAttributesWithoutAttributes(styleElement) {\n  var nonce =  true ? __webpack_require__.nc : 0;\n\n  if (nonce) {\n    styleElement.setAttribute(\"nonce\", nonce);\n  }\n}\n\nmodule.exports = setAttributesWithoutAttributes;\n\n//# sourceURL=webpack://2048/./node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleDomAPI.js":
/*!***************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleDomAPI.js ***!
  \***************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction apply(styleElement, options, obj) {\n  var css = \"\";\n\n  if (obj.supports) {\n    css += \"@supports (\".concat(obj.supports, \") {\");\n  }\n\n  if (obj.media) {\n    css += \"@media \".concat(obj.media, \" {\");\n  }\n\n  var needLayer = typeof obj.layer !== \"undefined\";\n\n  if (needLayer) {\n    css += \"@layer\".concat(obj.layer.length > 0 ? \" \".concat(obj.layer) : \"\", \" {\");\n  }\n\n  css += obj.css;\n\n  if (needLayer) {\n    css += \"}\";\n  }\n\n  if (obj.media) {\n    css += \"}\";\n  }\n\n  if (obj.supports) {\n    css += \"}\";\n  }\n\n  var sourceMap = obj.sourceMap;\n\n  if (sourceMap && typeof btoa !== \"undefined\") {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  options.styleTagTransform(css, styleElement, options.options);\n}\n\nfunction removeStyleElement(styleElement) {\n  // istanbul ignore if\n  if (styleElement.parentNode === null) {\n    return false;\n  }\n\n  styleElement.parentNode.removeChild(styleElement);\n}\n/* istanbul ignore next  */\n\n\nfunction domAPI(options) {\n  var styleElement = options.insertStyleElement(options);\n  return {\n    update: function update(obj) {\n      apply(styleElement, options, obj);\n    },\n    remove: function remove() {\n      removeStyleElement(styleElement);\n    }\n  };\n}\n\nmodule.exports = domAPI;\n\n//# sourceURL=webpack://2048/./node_modules/style-loader/dist/runtime/styleDomAPI.js?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/styleTagTransform.js":
/*!*********************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/styleTagTransform.js ***!
  \*********************************************************************/
/***/ ((module) => {

eval("\n\n/* istanbul ignore next  */\nfunction styleTagTransform(css, styleElement) {\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css;\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild);\n    }\n\n    styleElement.appendChild(document.createTextNode(css));\n  }\n}\n\nmodule.exports = styleTagTransform;\n\n//# sourceURL=webpack://2048/./node_modules/style-loader/dist/runtime/styleTagTransform.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utilityFunctions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utilityFunctions.js */ \"./src/utilityFunctions.js\");\n/* harmony import */ var _logic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logic.js */ \"./src/logic.js\");\n/* harmony import */ var _style_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./style.css */ \"./src/style.css\");\n/* harmony import */ var _background_jpg__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./background.jpg */ \"./src/background.jpg\");\n\n\n;\n\n\n\n\n\n\nconst htmlOptions = {\n    rootElement: document.getElementById('bodyContainer'),\n    scoreWrapper: document.getElementById('scoreWrapper'),\n}\n\nclass htmlRender {\n    constructor(options) {\n        this.rootElement = options.rootElement;\n        this.scoreWrapper = options.scoreWrapper;\n\n        this.drawGrid = function (targetArray) {\n            const mainTable = document.createElement('table')\n            mainTable.id = 'mainTable'\n            htmlOptions.rootElement.append(mainTable)\n            const tBody = document.createElement('tbody')\n            mainTable.append(tBody)\n            for (let i = 0; i < targetArray.length; i++) {\n                let tr = document.createElement('tr')\n                tr.style.width = mainTable.style.width\n                tBody.append(tr)\n                for (let n = 0; n < targetArray[i].length; n++) {\n                    let td = document.createElement('td')\n                    tr.append(td)\n                }\n            }\n        }\n        this.drawElements = function (target) {\n            let htmlRows = htmlOptions.rootElement.firstElementChild.firstElementChild.querySelectorAll('tr')\n            if (Array.isArray(target)) {\n                for (let row of target) {\n                    for (let element of row) {\n                        let currentRowHtmlCells = htmlRows[element.row - 1].querySelectorAll('td') // уменьшаем на 1 тк массив начинается с 0\n                        if ((currentRowHtmlCells[element.column - 1].firstElementChild !== null) && (element.value === false)) {\n                            currentRowHtmlCells[element.column - 1].firstElementChild.remove()\n                        }\n                        if (element.value !== false) {\n                            if (currentRowHtmlCells[element.column - 1].firstElementChild !== null) {\n                                currentRowHtmlCells[element.column - 1].firstElementChild.remove()\n                            }\n                            let cell = document.createElement('div')\n                            cell.className = 'basicElement'\n                            cell.innerText = element.value + ''\n                            ;(0,_utilityFunctions_js__WEBPACK_IMPORTED_MODULE_0__.defineColor)(cell)\n                            currentRowHtmlCells[element.column - 1].append(cell)\n                            setTimeout(function () {\n                                cell.style.animation = 'none'\n                            }, 200)\n                        }\n                    }\n                }\n            }\n            else {\n                let cell = document.createElement('div')\n                cell.className = 'basicElement'\n                cell.innerText = target.animationNewValue + ''\n                ;(0,_utilityFunctions_js__WEBPACK_IMPORTED_MODULE_0__.defineColor)(cell)\n                htmlRows[target.animationTargetRow-1].querySelectorAll('td')[target.animationTargetColumn-1].append(cell)\n                setTimeout(function () {\n                    cell.style.animation = 'none'\n                }, 200)\n            }\n        }\n        this.getDrawElements = function (){\n            return this.drawElements\n        }\n        this.animate = function (targetAnimationData) {\n            const drawElements = this.getDrawElements()\n            if (window.matchMedia('(min-width: 768px)').matches) {\n                this.oneCellDistance = 120\n            }\n            if (window.matchMedia('(max-width: 767px)').matches) {\n                this.oneCellDistance = 80\n            }\n            if (window.matchMedia('(max-width: 480px)').matches) {\n                this.oneCellDistance = 58\n            }\n            let htmlRows = document.querySelectorAll('tr')\n            let htmlColumns = []\n            for (let i = 0; i < htmlOptions.rootElement.firstElementChild.firstElementChild.firstElementChild.childElementCount; i++) { // количество колонок === количество элементов tr. доступ к tr через root element\n                let htmlColumn = []\n                for (let row of htmlRows) {\n                    htmlColumn.push(row.querySelectorAll('td')[i])\n                }\n                htmlColumns.push(htmlColumn)\n            }\n            for (let element of targetAnimationData) {\n                if (element.animationType === 'move') {\n                    if ((element.animationDirection === 'right') || (element.animationDirection === 'left')) {\n                        let currentRowHtmlCells = htmlRows[element.animationTargetRow - 1].querySelectorAll('td') // на 1 меньше тк массив начинается с 0\n                        if (element.animationDirection === 'right') {\n                            let currentAnimationTarget = currentRowHtmlCells[element.animationTargetColumn - 1].firstElementChild\n                            if (currentAnimationTarget !== null) {\n                                setTimeout(function () {\n                                    currentAnimationTarget.style.animation = 'none'\n                                })\n                                currentAnimationTarget.style.left = this.oneCellDistance * element.animationDistance + 'px'\n                                setTimeout(function () {\n                                    let targetHtmlCell = currentRowHtmlCells[(element.animationTargetColumn - 1) + element.animationDistance] // тк двигаемся к концу массива (направо), складываем\n                                    targetHtmlCell.appendChild(currentAnimationTarget)\n                                    currentAnimationTarget.style.left = '0'\n                                    currentAnimationTarget.style.zIndex = '1'\n                                    for (let cell of currentRowHtmlCells) { // тк в результате передвижений складываемых элементов они оба оказываются внутри целевого блока, один из них нужно удалить\n                                        if (cell.childElementCount > 1) {\n                                            cell.firstElementChild.remove()\n                                        }\n                                    }\n                                }, 200)\n                            }\n                        }\n                        if (element.animationDirection === 'left') {\n                            let currentAnimationTarget = currentRowHtmlCells[element.animationTargetColumn - 1].firstElementChild\n                            if (currentAnimationTarget !== null) {\n                                setTimeout(function () {\n                                    currentAnimationTarget.style.animation = 'none'\n                                })\n                                currentAnimationTarget.style.left = -2 * this.oneCellDistance * element.animationDistance + 'px'\n                                setTimeout(function () {\n                                    let targetHtmlCell = currentRowHtmlCells[(element.animationTargetColumn - 1) - element.animationDistance] // тк двигаемся к началу массива (налево), вычитаем\n                                    targetHtmlCell.appendChild(currentAnimationTarget)\n                                    currentAnimationTarget.style.left = '0'\n                                    currentAnimationTarget.style.zIndex = '1'\n                                    for (let cell of currentRowHtmlCells) {\n                                        if (cell.childElementCount > 1) {\n                                            cell.firstElementChild.remove()\n                                        }\n                                    }\n                                }, 200)\n                            }\n                        }\n                    }\n                    if ((element.animationDirection === 'top') || (element.animationDirection === 'bottom')) {\n                        let currentColumnsHtmlCells = htmlColumns[element.animationTargetColumn - 1]\n                        if (element.animationDirection === 'top') {\n                            let currentAnimationTarget = currentColumnsHtmlCells[element.animationTargetRow - 1].firstElementChild\n                            if (currentAnimationTarget !== null) {\n                                setTimeout(function () {\n                                    currentAnimationTarget.style.animation = 'none'\n                                })\n                                currentAnimationTarget.style.top = -this.oneCellDistance * element.animationDistance + 'px'\n                                setTimeout(function () {\n                                    let targetHtmlCell = currentColumnsHtmlCells[(element.animationTargetRow - 1) - element.animationDistance]\n                                    targetHtmlCell.appendChild(currentAnimationTarget)\n                                    currentAnimationTarget.style.top = '0'\n                                    currentAnimationTarget.style.zIndex = '1'\n                                    for (let cell of currentColumnsHtmlCells) {\n                                        if (cell.childElementCount > 1) {\n                                            cell.firstElementChild.remove()\n                                        }\n                                    }\n                                }, 200)\n                            }\n                        }\n                        if (element.animationDirection === 'bottom') {\n                            let currentAnimationTarget = currentColumnsHtmlCells[element.animationTargetRow - 1].firstElementChild\n                            if (currentAnimationTarget !== null) {\n                                setTimeout(function () {\n                                    currentAnimationTarget.style.animation = 'none'\n                                })\n                                currentAnimationTarget.style.top = this.oneCellDistance * element.animationDistance + 'px'\n                                setTimeout(function () {\n                                    let targetHtmlCell = currentColumnsHtmlCells[(element.animationTargetRow - 1) + element.animationDistance]\n                                    targetHtmlCell.appendChild(currentAnimationTarget)\n                                    currentAnimationTarget.style.top = '0'\n                                    currentAnimationTarget.style.zIndex = '1'\n                                    for (let cell of currentColumnsHtmlCells) {\n                                        if (cell.childElementCount > 1) {\n                                            cell.firstElementChild.remove()\n                                        }\n                                    }\n                                }, 200)\n                            }\n                        }\n                    }\n                }\n                if (element.animationType === 'append') {\n                    setTimeout(function () {\n                        drawElements(element)\n                        logic.animationDone = true // ВНУТРИ таймаута (то есть уже после выполнения анимаций) даем счетчику знать, что анимация выполнена. тк любая анимация сопровождается вставкой нового элемента, счетчик ставим только сюда\n                    }, 300)\n                }\n                if (element.animationType === 'sum') {\n                    if ((element.animationDirection === 'left') || (element.animationDirection === 'right')) {\n                        let currentRowHtmlCells = htmlRows[element.animationTargetRow - 1].querySelectorAll('td') // на 1 меньше тк массив начинается с 0\n                        if (element.animationDirection === 'left') {\n                            let movementDistance = 0 // счетчик для считывания дистанции статичного и передвигающегося суммируемых блоков\n                            let currentAnimationTarget = currentRowHtmlCells[element.animationTargetColumn - 1].lastElementChild //блок значение которого изменится в ходе сложения\n                            if (currentAnimationTarget !== null) {\n                                for (let otherAnimationData of targetAnimationData) {\n                                    if ((otherAnimationData.animationType === 'move') && (otherAnimationData.animationTargetRow === element.animationTargetRow) && (otherAnimationData.animationTargetColumn === element.animationTargetColumn - element.animationDistance + '')) {\n                                        movementDistance = otherAnimationData.animationDistance // ищем среди других объектов анимации тот, который создавался для перемещения результата сложения 2/2/2/2 => -/4/-/4 => -/-/4/4 => одну из четверок после сложения нужно передвинуть еще на 1. это значение хранит счетчик\n                                    }\n                                } // создаем два анимационных объекта для каждого из слагаемых\n                                targetAnimationData.splice(targetAnimationData.length-1, 0 , this.animateSumHelper(element, element.animationDirection, movementDistance, currentAnimationTarget))\n                            }\n                        }\n                        if (element.animationDirection === 'right') {\n                            let movementDistance = 0\n                            let currentAnimationTarget = currentRowHtmlCells[element.animationTargetColumn - 1].lastElementChild\n                            if (currentAnimationTarget !== null) {\n                                for (let otherAnimationData of targetAnimationData) {\n                                    if ((otherAnimationData.animationType === 'move') && (otherAnimationData.animationTargetRow === element.animationTargetRow) && (otherAnimationData.animationTargetColumn === +element.animationTargetColumn + element.animationDistance + '')) {\n                                        movementDistance = otherAnimationData.animationDistance\n                                    }\n                                }\n                                targetAnimationData.splice(targetAnimationData.length-1, 0 , this.animateSumHelper(element, element.animationDirection, movementDistance, currentAnimationTarget))\n                            }\n                        }\n                    }\n                    if ((element.animationDirection === 'top') || (element.animationDirection === 'bottom')) {\n                        let currentColumnsHtmlCells = htmlColumns[element.animationTargetColumn - 1]\n                        if (element.animationDirection === 'top') {\n                            let movementDistance = 0 // счетчик для считывания дистанции статичного и передвигающегося суммируемых блоков\n                            let currentAnimationTarget = currentColumnsHtmlCells[element.animationTargetRow - 1].lastElementChild\n                            if (currentAnimationTarget !== null) {\n                                for (let otherAnimationData of targetAnimationData) {\n                                    if ((otherAnimationData.animationType === 'move') && (otherAnimationData.animationTargetColumn === element.animationTargetColumn) && (otherAnimationData.animationTargetRow === element.animationTargetRow - element.animationDistance + '')) {\n                                        movementDistance = otherAnimationData.animationDistance // ищем среди других объектов анимации тот, который создавался для перемещения результата сложения 2/2/2/2 => -/4/-/4 => -/-/4/4 => одну из четверок после сложения нужно передвинуть еще на 1. это значение хранит счетчик\n                                    }\n                                } // создаем два анимационных объекта для каждого из слагаемых\n                                targetAnimationData.splice(targetAnimationData.length-1, 0 , this.animateSumHelper(element, element.animationDirection, movementDistance, currentAnimationTarget))\n                            }\n                        }\n                        if (element.animationDirection === 'bottom') {\n                            let movementDistance = 0\n                            let currentAnimationTarget = currentColumnsHtmlCells[element.animationTargetRow - 1].lastElementChild\n                            if (currentAnimationTarget !== null) {\n                                for (let otherAnimationData of targetAnimationData) {\n                                    if ((otherAnimationData.animationType === 'move') && (otherAnimationData.animationTargetColumn === element.animationTargetColumn) && (otherAnimationData.animationTargetRow === +element.animationTargetRow + element.animationDistance + '')) {\n                                        movementDistance = otherAnimationData.animationDistance\n                                    }\n                                }\n                                targetAnimationData.splice(targetAnimationData.length-1, 0 , this.animateSumHelper(element, element.animationDirection, movementDistance, currentAnimationTarget))\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this.animateSumHelper = function (animationElement, direction, movementDistance, currentAnimationTarget) {\n            let sumMoveAnimation = {\n                animationType: 'move',\n                animationDirection: direction,\n                animationDistance: movementDistance + animationElement.animationDistance,\n                animationTargetRow: animationElement.animationTargetRow,\n                animationTargetColumn: animationElement.animationTargetColumn,\n            }\n            currentAnimationTarget.innerText = animationElement.animationNewValue\n            currentAnimationTarget.style.zIndex = '2' // чтобы блок с новым значением всегда был сверху\n            ;(0,_utilityFunctions_js__WEBPACK_IMPORTED_MODULE_0__.defineColor)(currentAnimationTarget)\n            return sumMoveAnimation\n        }\n        this.getAnimate = function () {\n            return this.animate\n        }\n        this.observers = function () {\n            const generalObserver = new MutationObserver(function ()  { // обновление счета при любых изменениях\n                if (logic.currentScore !== parseInt(htmlOptions.scoreWrapper.lastElementChild.innerText)) {\n                    htmlOptions.scoreWrapper.lastElementChild.innerText = logic.currentScore\n                }\n            })\n            const flickerObserver = new MutationObserver( function () {\n                htmlOptions.scoreWrapper.animate( [\n                    { // from\n                        backgroundColor: '#2EE59D'\n                    },\n                    { // to\n                        backgroundColor: 'whitesmoke'\n                    }\n                ], 500)\n            })\n            generalObserver.observe(htmlOptions.rootElement.firstElementChild, {\n                subtree: true,\n                childList: true,\n                characterDataOldValue: true\n            })\n            flickerObserver.observe(htmlOptions.scoreWrapper.lastElementChild, {\n                childList: true,\n                characterDataOldValue: true,\n                characterData: true\n            })\n        }\n        this.newGame = function () {\n            const newGameButton = document.getElementById('newGameButton')\n            const drawElements = this.drawElements\n            const elementCreate = logic.getElementCreate()\n            newGameButton.onclick = function () {\n                let currentElements = document.getElementsByClassName('basicElement')\n                while (currentElements[0]) {\n                    currentElements[0].remove()\n                }\n                for (let element of logic.getGrid()) {\n                    for (let subelement of element) {\n                        if (subelement.value !== false) {\n                            subelement.value = false\n                        }\n                    }\n                }\n                logic.currentScore = 0\n                elementCreate(logic.getGrid())\n                elementCreate(logic.getGrid())\n                drawElements(logic.getGrid())\n            }\n            newGameButton.ontouchstart = function () {\n                newGameButton.style.background = '#2EE59D'\n                newGameButton.style.boxShadow = '0 15px 20px rgba(46, 229, 157, 0.4)'\n                newGameButton.style.color = '#fff'\n            }\n            newGameButton.ontouchend = function () {\n                newGameButton.style.background = 'whitesmoke'\n                newGameButton.style.boxShadow = '0 8px 15px rgb(0 0 0 / 10%)'\n                newGameButton.style.color = 'black'\n            }\n        }\n        this.leftImpossible = 0\n        this.downImpossible = 0\n        this.upImpossible = 0\n        this.rightImpossible = 0\n\n        this.drawGrid(logic.getGrid());\n        this.drawElements(logic.getGrid());\n        this.newGame();\n        this.touchStart = null; //Точка начала касания\n        this.touchPosition = null; //Текущая позиция\n        this.sensitivity = 20;\n        this.observers();\n        this.touchStartFunc = function (event) {\n            this.touchStart = {\n                x: event.changedTouches[0].clientX,\n                y: event.changedTouches[0].clientY\n            } //Получаем текущую позицию касания\n            this.touchPosition = {\n                x: this.touchStart.x,\n                y: this.touchStart.y\n            }\n        };\n        this.touchMove = function (event) {\n            this.touchPosition = {\n                x: event.changedTouches[0].clientX,\n                y: event.changedTouches[0].clientY,\n            }\n        };\n        this.touchEnd = function () {\n            const animate = render.getAnimate().bind(render)\n            const move = logic.getMove().bind(logic)\n            let swipeType = this.checkAction(); //Определяем, какой жест совершил пользователь\n            if (swipeType === \"Swipe left\") {\n                let animationArray = move('left')\n                animate(animationArray)\n            }\n            if (swipeType === \"Swipe right\") {\n                let animationArray = move('right')\n                animate(animationArray)\n            }\n            if (swipeType === \"Swipe up\") {\n                let animationArray = move('top')\n                animate(animationArray)\n            }\n            if (swipeType === \"Swipe down\") {\n                let animationArray = move('bottom')\n                animate(animationArray)\n            }\n            this.touchStart = null; //Очищаем позиции\n            this.touchPosition = null;\n        };\n        this.checkAction = function () {\n            let d = { //Получаем расстояния от начальной до конечной точек по обеим осям\n                x: this.touchStart.x - this.touchPosition.x,\n                y: this.touchStart.y - this.touchPosition.y\n            };\n            let swipeType; //Сообщение\n            if (Math.abs(d.x) > Math.abs(d.y)) { //Проверяем, движение по какой оси было длиннее\n                if (Math.abs(d.x) > this.sensitivity) {//Проверяем, было ли движение достаточно длинным\n                    if (d.x > 0) { //Если значение больше нуля, значит пользователь двигал пальцем справа налево\n                        swipeType = \"Swipe left\"\n                    }\n                    else { //Иначе он двигал им слева направо\n                        swipeType = \"Swipe right\"\n                    }\n                }\n            }\n            else { //Аналогичные проверки для вертикальной оси\n                if(Math.abs(d.y) > this.sensitivity) {\n                    if(d.y > 0) { //Свайп вверх\n                        swipeType = \"Swipe up\"\n                    }\n                    else { //Свайп вниз\n                        swipeType = \"Swipe down\"\n                    }\n                }\n            }\n            return swipeType\n        }\n    }\n}\n\nconst logic = new _logic_js__WEBPACK_IMPORTED_MODULE_1__.mainGame(_logic_js__WEBPACK_IMPORTED_MODULE_1__.logicOptions)\nconst render = new htmlRender(htmlOptions)\n\n\nfunction listeners (render, logic) {\n    const animate = render.getAnimate().bind(render)\n    const move = logic.getMove().bind(logic)\n    window.addEventListener('keydown', function(event) {\n        event.preventDefault()\n        if (logic.animationDone) { // проверяем завершилась ли предыдущая анимация\n            let tableFull = true\n            for (let element of document.querySelectorAll('td')) {\n                if (element.firstElementChild === null) {\n                    tableFull = false\n                }\n            }\n            if (event.code === 'ArrowLeft') {\n                let animationArray = move('left')\n                if ((animationArray.length === 0) && (render.leftImpossible === 0)) {\n                    render.leftImpossible++\n                }\n                if ((animationArray.length > 0) && (render.leftImpossible === 1)) {\n                    render.leftImpossible--\n                }\n                render.movementImpossible = render.leftImpossible + render.downImpossible + render.upImpossible + render.rightImpossible\n                if ((render.movementImpossible === 4) && (tableFull === true)) {\n                    alert('Игра окончена')\n                }\n                animate(animationArray)\n            }\n            if (event.code === 'ArrowDown') {\n                let animationArray = move('bottom')\n                if ((animationArray.length === 0) && (render.downImpossible === 0)) {\n                    render.downImpossible++\n                }\n                if ((animationArray.length > 0) && (render.downImpossible === 1)) {\n                    render.downImpossible--\n                }\n                render.movementImpossible = render.leftImpossible + render.downImpossible + render.upImpossible + render.rightImpossible\n                if ((render.movementImpossible === 4) && (tableFull === true)) {\n                    alert('Игра окончена')\n                }\n                animate(animationArray)\n            }\n            if (event.code === 'ArrowUp') {\n                let animationArray = move('top')\n                if ((animationArray.length === 0) && (render.upImpossible === 0)) {\n                    render.upImpossible++\n                }\n                if ((animationArray.length > 0) && (render.upImpossible === 1)) {\n                    render.upImpossible--\n                }\n                render.movementImpossible = render.leftImpossible + render.downImpossible + render.upImpossible + render.rightImpossible\n                if ((render.movementImpossible === 4) && (tableFull === true)) {\n                    alert('Игра окончена')\n                }\n                animate(animationArray)\n            }\n            if (event.code === 'ArrowRight') {\n                let animationArray = move('right')\n                if ((animationArray.length === 0) && (render.rightImpossible === 0)) {\n                    render.rightImpossible++\n                }\n                if ((animationArray.length > 0) && (render.rightImpossible === 1)) {\n                    render.rightImpossible--\n                }\n                render.movementImpossible = render.leftImpossible + render.downImpossible + render.upImpossible + render.rightImpossible\n                if ((render.movementImpossible === 4) && (tableFull === true)) {\n                    alert('Игра окончена')\n                }\n                animate(animationArray)\n            }\n        }\n    })\n    htmlOptions.rootElement.addEventListener(\"touchstart\", function (e) {\n        e.preventDefault()\n        render.touchStartFunc(e)\n    }) //Начало касания\n    htmlOptions.rootElement.addEventListener(\"touchmove\", function (e) {\n        e.preventDefault()\n        render.touchMove(e)\n    }) //Движение пальцем по экрану\n    htmlOptions.rootElement.addEventListener(\"touchend\", function (e) {\n        render.touchEnd(e)\n    }) // Пользователь отпустил экран\n}\n\n\nlisteners(render, logic)\n\n\n//# sourceURL=webpack://2048/./src/index.js?");

/***/ }),

/***/ "./src/logic.js":
/*!**********************!*\
  !*** ./src/logic.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"logicOptions\": () => (/* binding */ logicOptions),\n/* harmony export */   \"mainGame\": () => (/* binding */ mainGame)\n/* harmony export */ });\n/* harmony import */ var _utilityFunctions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utilityFunctions.js */ \"./src/utilityFunctions.js\");\n\n\n\n\n;\n\nconst logicOptions = {\n    gridWidth: 4,\n    gridHeight: 4,\n}\n\nclass mainGame {\n    grid = [];\n    constructor(options) {\n        this.getGrid = function () {\n            return this.grid\n        }\n        this.addToCurrentScore = function (value) {\n            this.currentScore += value\n        }\n        this.createGrid = function (height, width) {\n            for (let i = 1; i <= height; i++) {\n                let row = []\n                this.grid.push(row)\n                for (let n = 1; n <= width; n++) {\n                    let cell = {\n                        value: false,\n                        row: `${i}`,\n                        column: `${n}`\n                    }\n                    row.push(cell)\n                }\n            }\n            return this.grid\n        }\n        this.elementCreate = function (targetGrid) { // Создаем два новых элемента; \"2\" с шансом 90%, \"4\" с шансом 10%\n            let newElementValue\n            if ((0,_utilityFunctions_js__WEBPACK_IMPORTED_MODULE_0__.getRandomInt)(0,10) === 9) {\n                newElementValue = 4\n            }\n            else newElementValue = 2\n\n            let rowIndex\n            let columnIndex\n            do {\n                rowIndex = (0,_utilityFunctions_js__WEBPACK_IMPORTED_MODULE_0__.getRandomInt)(0, logicOptions.gridHeight)\n                columnIndex = (0,_utilityFunctions_js__WEBPACK_IMPORTED_MODULE_0__.getRandomInt)(0, logicOptions.gridWidth)\n            } while (targetGrid[+rowIndex][+columnIndex].value !== false);\n            targetGrid[+rowIndex][+columnIndex].value = newElementValue\n            return targetGrid[rowIndex][columnIndex]\n        }\n        this.getElementCreate = function () {\n            return this.elementCreate\n        }\n        this.move = function (direction) {\n            const horizontalRows = this.grid // массив горизонтальных рядов таблицы\n            let animationData = []\n            let verticalColumns = []\n            for (let i = 0; i < this.grid[0].length; i++) {\n                let column = []\n                for (let row of this.grid) {\n                    column.push(row[i])\n                }\n                verticalColumns.push(column)\n            }\n            if (direction === 'left') {\n                for (let row of horizontalRows) { // проходимся по каждому из рядов\n                    for (let element of this.sum(row, 'left')) {\n                        animationData.push(element)\n                    }\n                    for (let i = 1; i < row.length; i++) { // нулевой элемент не учитываем, он и так в крайней левой позиции\n                        if (row[i].value !== false) { // нас интересуют только не пустые элементы\n                            for (let n = 0; n <= i; n++) { // двигаемся по элементам ряда от его начала к индексу элемента\n                                if (row[n].value === false) { // если находим пустой элемент\n                                    row[n].value = row[i].value // перезаписываем в него значение перемещаемого элемента\n                                    row[i].value = false // значение в старом элементе обнуляем\n                                    animationData.push(this.moveHelper(row, 'left', i, n)) // moveHelper создает анимационный объект движения, затем сразу же добавляем его к массиву анимаций передвижения\n                                    break // переходим к следующему передвигаемому элементу во внешний цикл\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (direction === 'right') {\n                for (let row of horizontalRows) { // проходимся по каждому из рядов\n                    for (let element of this.sum(row, 'right')) {\n                        animationData.push(element)\n                    }\n                    for (let i = row.length-2; i >= 0; i--) { // тк двигаемся слева направо, начинаем с с конца массива (последний элемент не учитываем,тк он в любом случае в крайнем правом положении)\n                        if (row[i].value !== false) { // нас интересуют только не пустые элементы\n                            for (let n = row.length-1; n >= i; n--) { // двигаемся по элементам ряда от его конца к индексу элемента\n                                if (row[n].value === false) { // если находим пустой элемент\n                                    row[n].value = row[i].value // перезаписываем в него значение перемещаемого элемента\n                                    row[i].value = false // значение в старом элементе обнуляем\n                                    animationData.push(this.moveHelper(row, 'right', i, n)) // moveHelper создает анимационный объект движения, затем сразу же добавляем его к массиву анимаций передвижения\n                                    break // переходим к следующему передвигаемому элементу во внешний цикл\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (direction === 'top') {\n                for (let column of verticalColumns) { // проходимся по каждой из колонок\n                    for (let element of this.sum(column, 'top')) {\n                        animationData.push(element)\n                    }\n                    for (let i = 1; i < column.length; i++) { // нулевой элемент не учитываем, он и так в крайней высшей (?) позиции\n                        if (column[i].value !== false) { // нас интересуют только не пустые элементы\n                            for (let n = 0; n <= i; n++) { // двигаемся по элементам ряда от его начала к индексу элемента\n                                if (column[n].value === false) { // если находим пустой элемент\n                                    column[n].value = column[i].value // перезаписываем в него значение перемещаемого элемента\n                                    column[i].value = false // значение в старом элементе обнуляем\n                                    animationData.push(this.moveHelper(column, 'top', i, n)) // moveHelper создает анимационный объект движения, затем сразу же добавляем его к массиву анимаций передвижения\n                                    break // переходим к следующему передвигаемому элементу во внешний цикл\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (direction === 'bottom') {\n                for (let column of verticalColumns) { // проходимся по каждой из колонок\n                    for (let element of this.sum(column, 'bottom')) {\n                        animationData.push(element)\n                    }\n                    for (let i = column.length-2; i >= 0; i--) { // тк двигаемся сверху вниз, начинаем с с конца массива (последний элемент не учитываем,тк он в любом случае в крайнем нижнем положении)\n                        if (column[i].value !== false) { // нас интересуют только не пустые элементы\n                            for (let n = column.length-1; n >= i; n--) { // двигаемся по элементам ряда от его конца к индексу элемента (снизу вверх)\n                                if (column[n].value === false) { // если находим пустой элемент\n                                    column[n].value = column[i].value // перезаписываем в него значение перемещаемого элемента\n                                    column[i].value = false // значение в старом элементе обнуляем\n                                    animationData.push(this.moveHelper(column, 'bottom', i, n)) // moveHelper создает анимационный объект движения, затем сразу же добавляем его к массиву анимаций передвижения\n                                    break // переходим к следующему передвигаемому элементу во внешний цикл\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if (animationData.length > 0) {\n                this.animationDone = false // если в массив анимаций были добавлены новые элементы, обнуляем индикатор выполнения анимаций\n                let newElement = this.elementCreate(this.grid)\n                let animationTarget = {\n                    animationType: 'append',\n                    animationTargetRow: newElement.row,\n                    animationTargetColumn: newElement.column,\n                    animationNewValue: newElement.value\n                }\n                animationData.push(animationTarget)\n            }\n            return animationData\n        }\n        this.moveHelper = function (targetArray, direction, i, n) {\n            if ((direction === 'left') || (direction === 'top')) {\n                let animationTarget = {\n                    animationType: 'move',\n                    animationTargetRow: targetArray[i].row,\n                    animationTargetColumn: targetArray[i].column,\n                    animationDirection: direction,\n                    animationDistance: i - n,\n                }\n                return animationTarget\n            }\n            if ((direction === 'right') || (direction === 'bottom')) {\n                let animationTarget = {\n                    animationType: 'move',\n                    animationTargetRow: targetArray[i].row,\n                    animationTargetColumn:targetArray[i].column,\n                    animationDirection: direction,\n                    animationDistance: n - i,\n                }\n                return animationTarget\n            }\n        } // функция для создания анимационных объектов движения\n        this.getMove = function () {\n            return this.move\n        }\n        this.sum = function (targetArray, direction) { // В качестве аргумента передаем массив элементов (колонку или ряд) в котором содержится элемент и счетчик изменений\n            let innerAnimationData = []\n            if ((direction === 'left') || (direction === 'top')) { // для этих направлений двигаемся от начала массива к концу\n                for (let i = 0; i < targetArray.length; i++) {\n                    if (innerAnimationData.length === 2) { // если это вторая операция сложения за этот вызов функции, прекращаем складывать вообще\n                        break\n                    }\n                    if (targetArray[i].value !== false) { // инетерсуют только непустые элементы\n                        for (let n = i+1; n < targetArray.length; n++) {\n                            if (targetArray[n].value === targetArray[i].value) {\n                                let spaceChecker = true\n                                for (let element of targetArray.slice(i+1, n)) {\n                                    if (element.value !== false) {\n                                        spaceChecker = false\n                                    }\n                                }\n                                if (spaceChecker) {\n                                    targetArray[i].value *= 2 + ''\n                                    targetArray[n].value = false\n                                    this.addToCurrentScore(targetArray[i].value) // НОВОЕ значение добавляем к счетчику\n                                    innerAnimationData.push(this.sumHelper(targetArray, direction, i, n)) // sumHelper создает анимационный объект сложения, затем сразу же добавляем его к массиву анимаций сложения\n                                    break\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            if ((direction === 'right') || (direction === 'bottom')) { // для этих направлений двигаемся от конца массива к началу\n                for (let i = targetArray.length-1; i >= 0; i--) {\n                    if (innerAnimationData.length === 2) { // если это вторая операция сложения за этот вызов функции, прекращаем складывать вообще\n                        break\n                    }\n                    if (targetArray[i].value !== false) { // только непустые элементы\n                        for (let n = i-1; n >= 0; n--) {\n                            if (targetArray[n].value === targetArray[i].value) {\n                                let spaceChecker = true\n                                for (let element of targetArray.slice(n+1, i)) {\n                                    if (element.value !== false) {\n                                        spaceChecker = false\n                                    }\n                                }\n                                if (spaceChecker) {\n                                    targetArray[i].value *= 2 + ''\n                                    targetArray[n].value = false\n                                    this.addToCurrentScore(targetArray[i].value) // НОВОЕ значение добавляем к счетчику\n                                    innerAnimationData.push(this.sumHelper(targetArray, direction, i, n)) // sumHelper создает анимационный объект сложения, затем сразу же добавляем его к массиву анимаций сложения\n                                    break\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            return innerAnimationData // возвращаем массив анимаций сложения\n        }\n        this.sumHelper = function (targetArray, direction, i, n) {\n            if ((direction === 'left') || (direction === 'top')) {\n                let animationTarget = {\n                    animationType: 'sum',\n                    animationTargetRow: targetArray[n].row,\n                    animationTargetColumn: targetArray[n].column,\n                    animationDirection: direction,\n                    animationDistance: n-i,\n                    animationNewValue: targetArray[i].value,\n                }\n                return animationTarget\n            }\n            if ((direction === 'right') || (direction === 'bottom')) {\n                let animationTarget = {\n                    animationType: 'sum',\n                    animationTargetRow: targetArray[n].row,\n                    animationTargetColumn: targetArray[n].column,\n                    animationDirection: direction,\n                    animationDistance: i-n,\n                    animationNewValue: targetArray[i].value,\n                }\n                return animationTarget\n            }\n        } // функция для создания анимационных объектов суммирования\n\n        this.grid = this.createGrid(options.gridHeight, options.gridWidth)\n        this.currentScore = 0\n        this.animationDone = true\n    }\n}\n\n//# sourceURL=webpack://2048/./src/logic.js?");

/***/ }),

/***/ "./src/utilityFunctions.js":
/*!*********************************!*\
  !*** ./src/utilityFunctions.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"colors\": () => (/* binding */ colors),\n/* harmony export */   \"defineColor\": () => (/* binding */ defineColor),\n/* harmony export */   \"getRandomInt\": () => (/* binding */ getRandomInt)\n/* harmony export */ });\n\n\nconst colors = { // После 2048 все элементы черные\n    2: '#f0e5da',\n    4: '#efe2c6',\n    8: '#fbb26c',\n    16: '#ff9251',\n    32: '#ff744e',\n    64: '#ff4d08',\n    128: '#f0d360',\n    256: '#f1d146',\n    512: '#f1cd26',\n    1024: '#f2ca00',\n    2048: '#f2c700'\n}\nfunction defineColor(element) {\n    let colorDefiner = parseInt(element.innerText)\n    if (colorDefiner <= 2048) {\n        element.style.backgroundColor = colors[`${colorDefiner}`]\n        if (colorDefiner > 4) {\n            element.style.color = '#faf6f2'\n        }\n    }\n    else {\n        element.style.backgroundColor = 'black'\n    }\n}\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min; //Максимум не включается, минимум включается\n}\n\n\n\n//# sourceURL=webpack://2048/./src/utilityFunctions.js?");

/***/ }),

/***/ "./src/background.jpg":
/*!****************************!*\
  !*** ./src/background.jpg ***!
  \****************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__.p + \"ece11d104b7a0c48ba21.jpg\";\n\n//# sourceURL=webpack://2048/./src/background.jpg?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		__webpack_require__.b = document.baseURI || self.location.href;
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"main": 0
/******/ 		};
/******/ 		
/******/ 		// no chunk on demand loading
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// no jsonp function
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;